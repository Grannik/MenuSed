#!/bin/bash
clear
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
flink ()
{
echo "
 GNU sed home page:
 https://www.gnu.org/software/sed/

 General help using GNU software:
 https://www.gnu.org/gethelp/
"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fhelp ()
{
echo "
+~~~~~+~~~~~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+
| sed | краткая часть  | развёрнутая часть   | описание                                                                             |
+-----+----------------+---------------------+--------------------------------------------------------------------------------------+
| sed |                | --version           | вывести информацию о версии и выйти                                                  |
|     | -h             | --help              | отобразить эту справку и выйти                                                       |  
|     | -n             | --quiet             |                                                                                      |
|     |                | --silent            | подавить автоматическую печать пространства шаблона                                  |
|     |                | --debug             | аннотировать выполнение программы                                                    |
|     | -e script      | --expression=script | добавить скрипт к выполняемым командам                                               |
|     | -f script-file | --file=script-file  | добавить содержимое скрипт-файла к выполняемым командам                              |
|     |                | --follow-symlinks   | следовать символическим ссылкам при обработке на месте                               |
|     | -i[SUFFIX]     | --in-place[=SUFFIX] | редактировать файлы на месте (делает резервную копию, если предоставлен СУФФИКС)     |
|     | -l N           | --line-length=N     | укажите желаемую длину переноса строки для команды \`l\'                             |
|     |                | --posix             | отключить все расширения GNU.                                                        |
|     | -E             |                     | использовать в скрипте расширенные регулярные выражения POSIX -E).                   |
|     | -r             | --regexp-extended   | (для переносимости используйте POSIX -E).                                            |
|     | -s             | --separate          | рассматривать файлы как отдельные, а не как один, непрерывный длинный поток.         |
|     |                | --sandbox           | работать в режиме песочницы (отключить команды e / r / w).                           |
|     | -u             | --unbuffered        | загружать минимальные объемы данных из входных и сбрасывать выходные буферы чаще.    |
|     | -z             | --null-data         | разделять строки символами NUL                                                       |
|     | -e             | --expression        | Аргумент без опций используется в качестве интерпретируемого сценария sed.           |
|     | -f             | --file              | Все оставшиеся аргументы - это имена входных файлов; если нет входных файлов указан, |
|     |                |                     | то читается стандартный ввод.                                                        |
+~~~~~+~~~~~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+
"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 esc=$(echo -e "\E")    # - получение символа ESC (параметр -e устанавливает расширенный режим команды echo)
 esc=$(echo -en "\033") # - альтернативное получение символа ESC
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fesc ()
{
sleep 0,020;echo " esc=\$(echo -e \"\\E\")    | получение символа ESC (параметр -e устанавливает расширенный режим команды echo)"
sleep 0,020;echo " esc=\$(echo -en \"\\033\") | альтернативное получение символа ESC"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fcolortxt ()
{
          sleep 0,020;echo "+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
          sleep 0,020;echo "| *** Таблица (некоторых) ESC-последовательностей: ***                            |"
          sleep 0,020;echo "+~~~~~~~~~~~~+~~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
          sleep 0,020;echo "| управление | цвет текста | смещение цвета для режима повышенной яркости (\\E[1m) |"
          sleep 0,020;echo "+------------+-------------+------------------------------------------------------+"
sleep 0,020;echo "${esc}[30m| \${esc}[30m | ЧЁРНЫЙ      | СЕРЫЙ                                                |"
sleep 0,020;echo "${esc}[31m| \${esc}[31m | КРАСНЫЙ     | РОЗОВЫЙ                                              |"
sleep 0,020;echo "${esc}[32m| \${esc}[32m | ЗЕЛЁНЫЙ     | САЛАТОВЫЙ                                            |"
sleep 0,020;echo "${esc}[33m| \${esc}[33m | КОРИЧНЕВЫЙ  | ЖЁЛТЫЙ                                               |"
sleep 0,020;echo "${esc}[34m| \${esc}[34m | СИНИЙ       | СВЕТЛО-СИНИЙ                                         |"
sleep 0,020;echo "${esc}[35m| \${esc}[35m | ПУРПУРНЫЙ   | ЛИЛОВЫЙ                                              |"
sleep 0,020;echo "${esc}[36m| \${esc}[36m | БИРЮЗОВЫЙ   | ГОЛУБОЙ                                              |"
sleep 0,020;echo "${esc}[37m| \${esc}[37m | БЕЛЫЙ       | ЯРКО-БЕЛЫЙ                                           |"
sleep 0,020;echo "${esc}[38m| \${esc}[38m | отмена установки цвета текста                                      |"
sleep 0,020;echo "${esc}[39m| \${esc}[39m | отмена установки цвета текста                                      |"
          sleep 0,020;echo "+~~~~~~~~~~~~+~~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fcolorbac ()
{
          sleep 0,020;echo "+~~~~~~~~~~~~+~~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
          sleep 0,020;echo "| управление | цвет фона   | смещение цвета для режима повышенной яркости (\E[1m) |"
          sleep 0,020;echo "+------------+-------------+------------------------------------------------------+"
sleep 0,020;echo "${esc}[40m| \${esc}[40m | ЧЁРНЫЙ      | СЕРЫЙ                                                |${esc}[49m"
sleep 0,020;echo "${esc}[41m| \${esc}[41m | КРАСНЫЙ     | РОЗОВЫЙ                                              |${esc}[49m"
sleep 0,020;echo "${esc}[42m| \${esc}[42m | ЗЕЛЁНЫЙ     | САЛАТОВЫЙ                                            |${esc}[49m"
sleep 0,020;echo "${esc}[43m| \${esc}[43m | КОРИЧНЕВЫЙ  | ЖЁЛТЫЙ                                               |${esc}[49m"
sleep 0,020;echo "${esc}[44m| \${esc}[44m | СИНИЙ       | СВЕТЛО-СИНИЙ                                         |${esc}[49m"
sleep 0,020;echo "${esc}[45m| \${esc}[45m | ПУРПУРНЫЙ   | ЛИЛОВЫЙ                                              |${esc}[49m"
sleep 0,020;echo "${esc}[46m| \${esc}[46m | БИРЮЗОВЫЙ   | ГОЛУБОЙ                                              |${esc}[49m"
sleep 0,020;echo "${esc}[47m| \${esc}[47m | БЕЛЫЙ       | ЯРКО-БЕЛЫЙ                                           |${esc}[49m"
sleep 0,020;echo "${esc}[48m| \${esc}[48m | отмена установки цвета фона текста                                 |"
sleep 0,020;echo "${esc}[49m| \${esc}[49m |                                                                    |"
          sleep 0,020;echo "+~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fshrift ()
{
          sleep 0,020;echo "+~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
          sleep 0,020;echo "| управление | шрифтом                                                            |"
          sleep 0,020;echo "+------------+--------------------------------------------------------------------+"
sleep 0,020;echo "${esc}[0m| \${esc}[0m  | сброс всех атрибутов                                               |"
sleep 0,020;echo "${esc}[1m| \${esc}[1m  | установка режима яркий (утолщённый)                                |${esc}[0m"
sleep 0,020;echo "${esc}[2m| \${esc}[2m  | установка режима тусклый (тонкий)                                  |${esc}[0m"
sleep 0,020;echo "${esc}[4m| \${esc}[4m  | установка режима подчеркнутый                                      |${esc}[0m"
sleep 0,020;echo "${esc}[5m| \${esc}[5m  | установка режима мигающий                                          |${esc}[0m"
sleep 0,020;echo "${esc}[7m| \${esc}[7m  | установка режима реверсный                                         |${esc}[0m"
          sleep 0,020;echo "+~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fcursor ()
{
          sleep 0,020;echo "+~~~~~~~~~~~~+~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
          sleep 0,020;echo "| управление    | курсором                                                        |"
          sleep 0,020;echo "+---------------+-----------------------------------------------------------------+"
          sleep 0,020;echo "| \${esc}[s      | запомнить положение курсора                                     |"
          sleep 0,020;echo "| \${esc}[u      | восстановить запомненное положение курсора                      |"
          sleep 0,020;echo "| \${esc}[nA     | вверх на n строк                                                |"
          sleep 0,020;echo "| \${esc}[nB     | вниз на n строк                                                 |"
          sleep 0,020;echo "| \${esc}[nC     | вправо на n строк                                               |"
          sleep 0,020;echo "| \${esc}[nD     | влево на n строк                                                |"
          sleep 0,020;echo "| \${esc}[nE     | в начало строки и на n строк вниз                               |"
          sleep 0,020;echo "| \${esc}[nF     | в начало строки и на n строк вверх                              |"
          sleep 0,020;echo "| \${esc}[n1;n2H | переместить в позицию n2 строки n1                              |"
          sleep 0,020;echo "| \${esc}[nZ     | на n табуляций назад                                            |"
          sleep 0,020;echo "| \${esc}[n\`     | в той же строке в позицию n                                     |"
          sleep 0,020;echo "| \${esc}[nd     | в той же позиции в строку n                                     |"
          sleep 0,020;echo "| \${esc}M       | сдвинуть курсор на строчку вверх, если он находится в самой вер-|
| хней строке, то сдвинуть содержимое экрана на строчку вниз                      |"
          sleep 0,020;echo "+---------------+-----------------------------------------------------------------+"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fmonitor ()
{
          sleep 0,020;echo "+~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
          sleep 0,020;echo "| управление | экраном                                                            |"
          sleep 0,020;echo "+------------+--------------------------------------------------------------------+"
          sleep 0,020;echo "| \${esc}c    | очистить весь экран и установить курсор в левый верхний угол       |"
          sleep 0,020;echo "| \${esc}[0J  | очистить от курсора до конца экрана                                |"
          sleep 0,020;echo "| \${esc}[1J  | очистить от начала экрана до курсора                               |"
          sleep 0,020;echo "| \${esc}[2J  | очистить весь экран                                                |"
          sleep 0,020;echo "| \${esc}[0K  | очистить от курсора до конца строки                                |"
          sleep 0,020;echo "| \${esc}[1K  | очистить от начала строки до курсора                               |"
          sleep 0,020;echo "| \${esc}[2K  | очистить всю строку                                                |"
          sleep 0,020;echo "| \${esc}[nX  | очистить очистить n знаков справа от позиции курсора               |"
          sleep 0,020;echo "| \${esc}[nL  | вставить n пустых строк ниже текущей строки                        |"
          sleep 0,020;echo "| \${esc}[nM  | удалить n строк ниже текущей строки                                |"
          sleep 0,020;echo "| \${esc}[nP  | удалить n знаков справа от курсора (в пределах строки)             |"
          sleep 0,020;echo "| \${esc}[n@  | вставить n знаков справа от курсора (в пределах строки)            |"
          sleep 0,020;echo "+~~~~~~~~~~~~+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
f033 ()
{
for (( i=0; i <=255; i++ ))
do
echo -e "\033[${i}m echo -e \"\\\033[${i}m текст \\\033[0m\" \033[0m"
done
#
echo " эффект текста;цвет текста;фон текста пищутся через точку-запятую"
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fe ()
{
for (( i=0; i <=255; i++ ))
do
echo -e " \e[${i}m echo -e \" \\\e[${i}m text \\\e[0m\" \e[0m"
done
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fx1b ()
{
for (( i=0; i <=255; i++ ))
do
echo -e " \x1B[${i}m echo -e \" \\\x1B[${i}m text \\\x1B[0m\" \x1B[0m"
done
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
color256 ()
{
for a in {0..255} ;
 do
  echo -e "\e[38;5;${a}m echo -e \"\\\e[38;5;${a}m $a text $a \\\e[0m\" \e[0m" ;
 done
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 E='echo -e';e='echo -en';trap "R;exit" 2
 ESC=$( $e "\e")
 TPUT(){ $e "\e[${1};${2}H" ;}
 CLEAR(){ $e "\ec";}
# 25 возможно это 
 CIVIS(){ $e "\e[?25l";}
# это цвет текста списка перед курсором при значении 0 в переменной  UNMARK(){ $e "\e[0m";}
 MARK(){ $e "\e[44m";}
# 0 это цвет заднего фона списка
 UNMARK(){ $e "\e[0m";}
# ~~~~~~~~ Эти строки задают цвет фона ~~~~~~~~
 R(){ CLEAR ;stty sane;CLEAR;};
#R(){ CLEAR ;stty sane;$e "\ec\e[37;44m\e[J";};
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 HEAD(){ for (( a=1; a<=30; a++ ))
  do
   TPUT $a 1
        $E "\xE2\x94\x82                                        \xE2\x94\x82";
  done
  TPUT 3 2
        $E "\033[92m Справочник Sed \033[0m";
  TPUT 13 2
        $E "\033[92m Скрипты Sed \033[0m";
  TPUT 27 2 
        $E "\033[92m Up \xE2\x86\x91 \xE2\x86\x93 Down Select Enter\033[0m";
 MARK;TPUT 1 2
        $E "  Программа написана на bash tput       " ;UNMARK;}
   i=0; CLEAR; CIVIS;NULL=/dev/null
# 32 это расстояние сверху и 48 это расстояние слева
   FOOT(){ MARK;TPUT 30 2
# нижнее заглавие
        $E "  *** | Grannik | 2021.08.01 | ***      ";UNMARK;}
# это управляет кнопками ввер/хвниз
 i=0; CLEAR; CIVIS;NULL=/dev/null
#
 ARROW(){ IFS= read -s -n1 key 2>/dev/null >&2
           if [[ $key = $ESC ]];then 
              read -s -n1 key 2>/dev/null >&2;
              if [[ $key = \[ ]]; then
                 read -s -n1 key 2>/dev/null >&2;
                 if [[ $key = A ]]; then echo up;fi
                 if [[ $key = B ]];then echo dn;fi
              fi
           fi
           if [[ "$key" == "$($e \\x0A)" ]];then echo enter;fi;}
# 4 и далее это отступ сверху и 48 это расстояние слева
 M0(){ TPUT  5 3; $e " Сайты                    ";}
 M1(){ TPUT  6 3; $e " Аргументы                ";}
 M2(){ TPUT  7 3; $e " Получение символа ESC    ";}
 M3(){ TPUT  8 3; $e " Управление цветом текста ";}
 M4(){ TPUT  9 3; $e " Управление цветом фона   ";}
 M5(){ TPUT 10 3; $e " Управление шрифтом       ";}
 M6(){ TPUT 11 3; $e " Управление курсором      ";}
 M7(){ TPUT 12 3; $e " Управление экраном       ";}
#
 M8(){ TPUT 14 3; $e " Цвет через \\\033          ";}
 M9(){ TPUT 15 3; $e " Цвет через \\\e            ";}
M10(){ TPUT 16 3; $e " Цвет через \\\x1B          ";}
M11(){ TPUT 17 3; $e " 256 цветов               ";}
M12(){ TPUT 18 3; $e " Градиент                 ";}
#
M13(){ TPUT 28 3; $e " EXIT                     ";}
# далее идет переменная LM=16 позволяющая выстраивать список в вертикаль.
LM=13
   MENU(){ for each in $(seq 0 $LM);do M${each};done;}
    POS(){ if [[ $cur == up ]];then ((i--));fi
           if [[ $cur == dn ]];then ((i++));fi
           if [[ $i -lt 0   ]];then i=$LM;fi
           if [[ $i -gt $LM ]];then i=0;fi;}
REFRESH(){ after=$((i+1)); before=$((i-1))
           if [[ $before -lt 0  ]];then before=$LM;fi
           if [[ $after -gt $LM ]];then after=0;fi
           if [[ $j -lt $i      ]];then UNMARK;M$before;else UNMARK;M$after;fi
           if [[ $after -eq 0 ]] || [ $before -eq $LM ];then
           UNMARK; M$before; M$after;fi;j=$i;UNMARK;M$before;M$after;}
   INIT(){ R;HEAD;FOOT;MENU;}
     SC(){ REFRESH;MARK;$S;$b;cur=`ARROW`;}
# Функция возвращения в меню
     ES(){ MARK;$e " ENTER = main menu ";$b;read;INIT;};INIT
  while [[ "$O" != " " ]]; do case $i in
        0) S=M0;SC;if [[ $cur == enter ]];then R;flink;ES;fi;;
        1) S=M1;SC;if [[ $cur == enter ]];then R;fhelp;ES;fi;;
        2) S=M2;SC;if [[ $cur == enter ]];then R;fesc;ES;fi;;
        3) S=M3;SC;if [[ $cur == enter ]];then R;fcolortxt;ES;fi;;
        4) S=M4;SC;if [[ $cur == enter ]];then R;fcolorbac;ES;fi;;
        5) S=M5;SC;if [[ $cur == enter ]];then R;fshrift;ES;fi;;
        6) S=M6;SC;if [[ $cur == enter ]];then R;fcursor;ES;fi;;
        7) S=M7;SC;if [[ $cur == enter ]];then R;fmonitor;ES;fi;;
        8) S=M8;SC;if [[ $cur == enter ]];then R;f033;ES;fi;;
        9) S=M9;SC;if [[ $cur == enter ]];then R;fe;ES;fi;;
       10) S=M10;SC;if [[ $cur == enter ]];then R;fx1b;ES;fi;;
       11) S=M11;SC;if [[ $cur == enter ]];then R;color256;ES;fi;;
       12) S=M12;SC;if [[ $cur == enter ]];then R;./gradiant;ES;fi;;
       13) S=M13;SC;if [[ $cur == enter ]];then R;clear;ls -l;exit 0;fi;;
 esac;POS;done
